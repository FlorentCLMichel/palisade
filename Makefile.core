#
#Copyright (c) 2015, New Jersey Institute of Technology (NJIT)
#All rights reserved.
#Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
#met:
#1. Redistributions of source code must retain the above copyright
#notice, this list of conditions and the following disclaimer.
#2. Redistributions in binary form must reproduce the above copyright
#notice, this list of conditions and the following disclaimer in the
#documentation and/or other materials provided with the distribution.
#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
#IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
#TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
#PARTICULAR PURPOSE ARE DISCLAIMED.
#IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
#ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
#OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
#STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
#IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#POSSIBILITY OF SUCH DAMAGE.
#


################
# Makefile.core builds the core components of the PALISADE library
# Includes unit tests and demos
################

CORESRCDIR := src/core
COREBINDIR := src/core/bin
CORETESTDIR := src/core/unittest
COREDEMODIR := src/core/demo

CORESOURCES := $(shell find $(CORESRCDIR)/lib -name '*.cpp') 
COREUNITSOURCES := $(wildcard $(CORESRCDIR)/unittest/*.cpp)
COREDEMOSOURCES := $(wildcard $(CORESRCDIR)/demo/*.cpp)

COREOBJECTS := $(patsubst $(CORESRCDIR)/%,$(COREBINDIR)/%,$(patsubst %.cpp,%.o,$(CORESOURCES)))
COREUNITOBJECTS := $(patsubst $(CORESRCDIR)/%,$(COREBINDIR)/%,$(patsubst %.cpp,%.o,$(COREUNITSOURCES)))
COREUNITOBJECTS += test/include/gtest/gtest-all.o
COREDEMOOBJECTS := $(patsubst $(CORESRCDIR)/%,$(COREBINDIR)/%,$(patsubst %.cpp,%.o,$(COREDEMOSOURCES)))

TEST_TARGET := $(EXTTESTDIR)/core/tests$(EXESUFFIX)

-include $(COREOBJECTS:.o=.d)
-include $(COREUNITOBJECTS:.o=.d)
-include $(COREDEMOOBJECTS:.o=.d)

.PHONY:allcore
allcore: $(EXTLIBDIR)/$(PALISADECORELIB) $(TEST_TARGET) allcoredemos

allcoredemos: $(EXTLIBDIR)/$(PALISADECORELIB) $(patsubst $(COREBINDIR)/demo/%,bin/demo/core/%,$(patsubst %.o,%$(EXESUFFIX),$(COREDEMOOBJECTS)))

bin/demo/core/%$(EXESUFFIX): src/core/bin/demo/%.o $(EXTLIBDIR)/$(PALISADECORELIB)
	@mkdir -p $(@D)
	$(CC) -o $@ $^ $(EXTLIB) -lPALISADEcore

#this builds the palisade library out of the objects 
$(EXTLIBDIR)/$(PALISADECORELIB): $(COREOBJECTS)
	@echo " -- core:linking $@ from COREOBJECTS"
	mkdir -p $(EXTLIBDIR)
	$(CC) $(LIBCMD) -o $@ $(COREOBJECTS) $(TEST_LIB)

### #this builds the individual objects that make up the library .
.PRECIOUS: $(COREBINDIR)/%
$(COREBINDIR)/%:
	@if [ "$(suffix $@)" = ".o" ] ;   \
	then  \
		mkdir -p $(@D)  ;\
		echo $(CC) $(CPPFLAGS) $(INC) -c -o $@ $(patsubst $(COREBINDIR)/%,$(CORESRCDIR)/%,$(patsubst %.o,%.cpp,$@))  ;\
		$(CC) -MM $(CPPFLAGS) $(INC) $(patsubst $(COREBINDIR)/%,$(CORESRCDIR)/%,$(patsubst %.o,%.cpp,$@)) > $(patsubst %.o,%.d,$@) ;\
		mv -f $(patsubst %.o,%.d,$@) $(patsubst %.o,%.d.tmp,$@)  ;\
		sed -e 's|.*\.o:|$(COREBINDIR)/$*:|' < $(patsubst %.o,%.d.tmp,$@) > $(patsubst %.o,%.d,$@)  ;\
		rm -f $(patsubst %.o,%.d.tmp,$@)  ; \
		$(CC) $(CPPFLAGS) $(INC) -c -o $@ $(patsubst $(COREBINDIR)/%,$(CORESRCDIR)/%,$(patsubst %.o,%.cpp,$@))  ;\
	fi 

#this target is used to cleanup, it is called from the top Makefile
.PHONY: cleancore 

cleancore: 
	$(RM) -fr $(COREBINDIR) $(EXTLIBDIR)/$(PALISADECORELIB) `dirname $(TEST_TARGET)` bin/demo/core

# this links test executable  from objects in the test build directory
$(TEST_TARGET): $(COREUNITOBJECTS) $(EXTLIBDIR)/$(PALISADECORELIB) 
	@mkdir -p `dirname $(TEST_TARGET)`
	$(CC) -o $(TEST_TARGET) $^ $(EXTLIB) $(TEST_LIB) 

#used to run tests from make
.PHONY: testcore
testcore: $(TEST_TARGET)
	$(TEST_TARGET)

